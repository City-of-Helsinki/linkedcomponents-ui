#
# Test pipeline. Run build and deploy for Platta test environments.
# Pipeline runs different tests e.g. unittest and browser tests.
#
# Continuous integration (CI) triggers cause a pipeline to run whenever you push 
# an update to the specified branches or you push specified tags.
# only PR trigger pipeline
trigger: none

schedules: 
# Every hour from 7 - 24 (finnish time winter time)
- cron: '0 5-22 * * *'
  branches: 
    include: 
    - azure-testcafe-test 
  always: true

jobs:
- job: e2e_tests
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn
  steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '16.x'
    displayName: 'Install Node.js'
  - script: |
      if [ -d ".yarn/cache/" ]; then
        echo ".yarn/cache checked in for 'Zero Installs', pushing cache and not running install.."  
      elif [ ! -d ".yarn/cache/" ]; then
        echo ".yarn/cache not found, configuring yarn.."
        echo "Setting yarn version to stable.."
        yarn set version stable
        echo "Checking yarn version.."
        yarn -v
        echo "Running yarn install.."
        yarn install 
      fi
      displayName: 'Check for .yarn cache or install packages'
  - task: ArchiveFiles@2
    displayName: 'Archive files'
    inputs:
      rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
      includeRootFolder: false
      archiveType: zip
      archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      replaceExistingArchive: true

  - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    artifact: drop
  - script: yarn browser-test:azure
    displayName: 'Run TestCafe Tests'
    env:
      BROWSER_TESTS_ENV_URL: 'https://linkedcomponents-ui-dev.agw.arodevtest.hel.fi'
      BROWSER_TESTS_LINKED_EVENTS_URL: 'https://linkedevents-api.dev.hel.ninja/linkedevents-dev/v1'
      BROWSER_TESTS_SHOW_ADMIN: 'true'
      BROWSER_TESTS_SHOW_REGISTRATION: 'true'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/report.xml'
      testResultsFormat: 'JUnit'
    condition: always()