name: Build & Review
on: [pull_request]

env:
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_REGISTRY_USER: ${{ secrets.GHCR_CONTAINER_REGISTRY_USER }}
  CONTAINER_REGISTRY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
  CONTAINER_REGISTRY_REPO: ghcr.io/city-of-helsinki/${{ github.event.repository.name }}
  REPO_NAME: ${{ github.event.repository.name }}
  KUBECONFIG_RAW: ${{ secrets.KUBECONFIG_RAW }}
  BUILD_ARTIFACT_FOLDER: 'build_artifacts'
  SERVICE_ARTIFACT_FOLDER: 'service_artifacts'
  BASE_DOMAIN: ${{ secrets.BASE_DOMAIN_STAGING }}
  SERVICE_PORT: 8000
  K8S_REQUEST_CPU: 1m
  K8S_REQUEST_RAM: 10Mi
  K8S_LIMIT_CPU: 50m
  K8S_LIMIT_RAM: 20Mi

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    steps:
      - uses: actions/checkout@v3
      - name: Build
        uses: andersinno/kolga-build-action@v2
        env:
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review
          DOCKER_BUILD_ARG_REACT_APP_LINKED_EVENTS_URL: 'https://linkedevents-api.dev.hel.ninja/linkedevents-dev/v1'
          DOCKER_BUILD_ARG_REACT_APP_LINKED_REGISTRATIONS_UI_URL: 'https://linkedregistrations-ui.test.kuva.hel.ninja'
          DOCKER_BUILD_ARG_REACT_APP_OIDC_AUTHORITY: 'https://api.hel.fi/sso'
          DOCKER_BUILD_ARG_REACT_APP_OIDC_CLIENT_ID: 'linkedcomponents-ui-test'
          DOCKER_BUILD_ARG_REACT_APP_OIDC_API_SCOPE: 'https://api.hel.fi/auth/linkedeventsdev'
          DOCKER_BUILD_ARG_REACT_APP_INTERNET_PLACE_ID: 'system:internet'
          DOCKER_BUILD_ARG_REACT_APP_LINKED_EVENTS_SYSTEM_DATA_SOURCE: 'helsinki'
          DOCKER_BUILD_ARG_REACT_APP_SHOW_ADMIN: 'true'
          DOCKER_BUILD_ARG_REACT_APP_SHOW_REGISTRATION: 'true'
          DOCKER_BUILD_ARG_REACT_APP_LOCALIZED_IMAGE: 'true'

  review:
    runs-on: ubuntu-latest
    needs: build
    name: Review
    steps:
      - uses: actions/checkout@v3
      - uses: andersinno/kolga-setup-action@v2

      - name: Deploy
        uses: andersinno/kolga-deploy-action@v2
        env:
          ENVIRONMENT_URL: https://${{ env.K8S_NAMESPACE }}.${{ env.BASE_DOMAIN }}
          DOCKER_IMAGE_NAME: ${{ env.REPO_NAME }}-review
      - name: Setup kubectl
        run: |
          echo "${{ env.KUBECONFIG_RAW }}" > $(pwd)/kubeconfig
          echo "KUBECONFIG=$(pwd)/kubeconfig" >> $GITHUB_ENV
        shell: bash
      - name: Get Review Deploy URL
        id: deploy-url
        run: |
          DEPLOY_URL=$(kubectl get ingress -n "${{ env.K8S_NAMESPACE }}" -o jsonpath='{.items[0].spec.rules[0].host}')
          echo "BROWSER_TESTS_ENV_URL=https://$DEPLOY_URL" >> $GITHUB_ENV
        shell: bash
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'yarn'
      - name: Install dependencies
        run: yarn --prefer-offline --frozen-lockfile --check-files
      - name: Run Acceptance Tests (TestCafe Browser Tests)
        run: yarn browser-test:ci
        env:
          BROWSER_TESTS_LINKED_EVENTS_URL: 'https://linkedevents-api.dev.hel.ninja/linkedevents-dev/v1'
          BROWSER_TESTS_SHOW_ADMIN: 'true'
          BROWSER_TESTS_SHOW_REGISTRATION: 'true'
          GITHUB_WORKFLOW_NAME: ${{  github.workflow }}
          GITHUB_WORKFLOW_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          TESTCAFE_SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          TESTCAFE_SLACK_CHANNEL: '#linked-alerts'
          TESTCAFE_SLACK_USERNAME: TestCaf√©
      - name: Upload screenshots and videos of failed tests to artifacts
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: report
          path: report/
